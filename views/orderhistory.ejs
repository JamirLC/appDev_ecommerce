New! Keyboard shortcuts … Drive keyboard shortcuts have been updated to give you first-letters navigation
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #C5A888;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            color: #fff;
            border-color: #2B1A08;
            margin-top: 20px;
        }
                /*header*/
       .logo {
            text-align: center;
            padding: 5px;
            color: #2B1A08;
            font-size: 2em;
            background-color: #F4F1E8;
            width: 100%; /* Make it take full width */
            margin-bottom: 20px; /* Add space below */
        }
        .order-item {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 10px;
        }

        .order-item p {
            margin: 5px 0;
            color: #555;
        }

        .delete-btn, .buy-again-btn {
            background-color: #2B1A08;
            color: #fff;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
            margin-top: 5px;
        }

        .delete-btn:hover, .buy-again-btn:hover {
            background-color: #c82333;
        }
        
    </style>
</head>
<body>
<div class="logo"><img src="jc2.png" height="50" alt=""></div>
    <h1>Order History</h1>

    <!-- Container for order list -->
    <div id="order-list-container" class="container">
        <!-- Order items will be dynamically added here -->
    </div>

    <!-- Template for order item -->
    <template id="order-item-template">
        <div class="order-item row align-items-center">
            <div class="col-md-3">
                <img class="img-fluid rounded order-image" alt="Product Image">
            </div>
            <div class="col-md-9">
                <p>Order ID: <span class="order-id"></span></p>
                <p>Product: <span class="product-name"></span></p>
                <p>Price: <span class="product-price"></span></p>
                <button class="delete-btn">Delete</button>
                <a href="userproducts.php">
                 <button class="buy-again-btn">Buy Again</button>
                </a>

                
            </div>
        </div>
    </template>

    <!-- Bootstrap JS (Optional) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <script>
        // Sample order data (replace with your actual data)
        const orders = [
            { id: 1, product: 'Darkchoco MilkTea', price: '₱58.00', imageUrl: 'darkchoco.png' },
            { id: 2, product: 'Redvelvet MilkTea', price: '₱58.00', imageUrl: 'redvelvet.png' },
            { id: 3, product: 'Choco Mouse MilkTea', price: '₱58.00', imageUrl: 'chocomouse.png' }
        ];

        // Function to render order items
        function renderOrders() {
            const orderListContainer = document.getElementById('order-list-container');
            const orderItemTemplate = document.getElementById('order-item-template');

            // Clear existing content
            orderListContainer.innerHTML = '';

            // Render each order item
            orders.forEach(order => {
                const clone = orderItemTemplate.content.cloneNode(true);
                const orderItem = clone.querySelector('.order-item');
                const orderId = clone.querySelector('.order-id');
                const productName = clone.querySelector('.product-name');
                const productPrice = clone.querySelector('.product-price');
                const orderImage = clone.querySelector('.order-image');

                orderId.textContent = order.id;
                productName.textContent = order.product;
                productPrice.textContent = order.price;
                orderImage.src = order.imageUrl;

                // Attach event listeners to buttons
                const deleteBtn = clone.querySelector('.delete-btn');
                deleteBtn.addEventListener('click', () => deleteOrder(order.id));

                const buyAgainBtn = clone.querySelector('.buy-again-btn');
                buyAgainBtn.addEventListener('click', () => buyAgain(order.id));

                orderListContainer.appendChild(clone);
            });
        }

        // Function to delete an order
        function deleteOrder(orderId) {
            // Implement delete functionality here
            // For now, we'll just remove it from the UI
            orders.splice(orders.findIndex(order => order.id === orderId), 1);
            renderOrders();
        }

        // Function to buy the same product again
        function buyAgain(orderId) {
            // Implement buy again functionality here
            // For now, let's assume we add the order back to the list
            const orderToBuy = orders.find(order => order.id === orderId);
            orders.push({ ...orderToBuy, id: orders.length + 1 });
            renderOrders();
        }

        // Initial rendering
        renderOrders();
    </script>
</body>
</html>